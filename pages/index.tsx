import Head from "next/head";
import { useEffect, useState } from "react";

export default function Home() {
  const [testCases, setTestCases] = useState<any>([]);

  const handleFileInput = (e: React.ChangeEvent<HTMLInputElement>) => {
    const reader = new FileReader();
    const files = e.target.files;
    reader.onload = async (event) => {
      const data = test(event.target?.result);
      console.log(data);
      setTestCases(data);
    };

    if (files === null) return;

    reader.readAsText(files[0]);
  };

  function test(str: string | ArrayBuffer | null | undefined) {
    if (str === null || str === undefined || typeof str !== "string") return;

    const line = str.split(/\n/);

    const testcases = [];
    for (const l of line) {
      if (l.trim() === "") break;

      const x = l.split(/(\s+)/).filter((e) => e.trim().length > 0);
      const gpa = parseFloat(x[0]);
      const credit = parseInt(x[1]);
      const expected = x[2];

      let actual = "F";

      // check gpa and credit is correct
      if (gpa >= 0 && gpa <= 4 && credit >= 0 && credit <= 134) {
        actual = "P";
      }

      const result = actual === expected ? "TestPass" : "TestFail";

      testcases.push({
        author: "non",
        gpa,
        credit,
        expected,
        actual,
        result,
      });
    }

    fetch("/api/test", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        testcases,
      }),
    });

    return testcases;
  }

  useEffect(() => {
    console.log(testCases);
  }, [testCases]);

  const handleAdd = () => {
    setTestCases([...testCases, Math.round(Math.random() * 100)]);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col w-full items-center">
        <h1 className="text-3xl font-bold m-10">Select file to test</h1>
        <input type="file" onChange={handleFileInput} />

        {testCases.length !== 0 && (
          <div className="m-10 flex flex-col gap-2">
            <p>Name: Weerawong Vonggatunyu</p>
            <p>Date: {new Date().toDateString()}</p>
            <table className="table-auto">
              <thead>
                <tr>
                  <th className="px-4 py-2 ">gpa</th>
                  <th className="px-4 py-2 ">credit</th>
                  <th className="px-4 py-2 ">actual</th>
                  <th className="px-4 py-2 ">expected</th>
                  <th className="px-4 py-2 ">result</th>
                </tr>
              </thead>
              <tbody>
                {testCases.map((testcase: any, idx: number) => (
                  <tr key={idx}>
                    <td className="border px-4 py-2  font-medium">
                      {testcase.gpa}
                    </td>
                    <td className="border px-4 py-2  font-medium">
                      {testcase.credit}
                    </td>
                    <td className="border px-4 py-2  font-medium">
                      {testcase.actual}
                    </td>
                    <td className="border px-4 py-2  font-medium">
                      {testcase.expected}
                    </td>
                    <td className="border px-4 py-2  font-medium">
                      {testcase.result}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </main>
    </>
  );
}
